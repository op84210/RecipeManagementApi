// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RecipeManagementApi.Data;

#nullable disable

namespace RecipeManagementApi.Migrations
{
    [DbContext(typeof(RecipeDbContext))]
    [Migration("20250707072844_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RecipeManagementApi.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<decimal>("CostPerUnit")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("MinimumStock")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("StockQuantity")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("Supplier")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = 0,
                            CostPerUnit = 0.008m,
                            CreatedDate = new DateTime(2025, 7, 7, 15, 28, 43, 98, DateTimeKind.Local).AddTicks(4314),
                            Description = "蛋白質含量12%以上的麵粉",
                            IsActive = true,
                            LastUpdatedDate = new DateTime(2025, 7, 7, 15, 28, 43, 98, DateTimeKind.Local).AddTicks(4827),
                            MinimumStock = 5000m,
                            Name = "高筋麵粉",
                            StockQuantity = 50000m,
                            Supplier = "統一麵粉公司",
                            Unit = "公克"
                        },
                        new
                        {
                            Id = 2,
                            Category = 0,
                            CostPerUnit = 0.005m,
                            CreatedDate = new DateTime(2025, 7, 7, 15, 28, 43, 98, DateTimeKind.Local).AddTicks(5337),
                            Description = "細白砂糖",
                            IsActive = true,
                            LastUpdatedDate = new DateTime(2025, 7, 7, 15, 28, 43, 98, DateTimeKind.Local).AddTicks(5337),
                            MinimumStock = 2000m,
                            Name = "砂糖",
                            StockQuantity = 20000m,
                            Supplier = "台糖公司",
                            Unit = "公克"
                        },
                        new
                        {
                            Id = 3,
                            Category = 0,
                            CostPerUnit = 8.0m,
                            CreatedDate = new DateTime(2025, 7, 7, 15, 28, 43, 98, DateTimeKind.Local).AddTicks(5343),
                            Description = "新鮮雞蛋",
                            IsActive = true,
                            LastUpdatedDate = new DateTime(2025, 7, 7, 15, 28, 43, 98, DateTimeKind.Local).AddTicks(5344),
                            MinimumStock = 50m,
                            Name = "雞蛋",
                            StockQuantity = 500m,
                            Supplier = "大成食品",
                            Unit = "顆"
                        },
                        new
                        {
                            Id = 4,
                            Category = 0,
                            CostPerUnit = 0.02m,
                            CreatedDate = new DateTime(2025, 7, 7, 15, 28, 43, 98, DateTimeKind.Local).AddTicks(5632),
                            Description = "法國進口無鹽奶油",
                            IsActive = true,
                            LastUpdatedDate = new DateTime(2025, 7, 7, 15, 28, 43, 98, DateTimeKind.Local).AddTicks(5633),
                            MinimumStock = 1000m,
                            Name = "無鹽奶油",
                            StockQuantity = 10000m,
                            Supplier = "法國乳品進口商",
                            Unit = "公克"
                        },
                        new
                        {
                            Id = 5,
                            Category = 0,
                            CostPerUnit = 0.002m,
                            CreatedDate = new DateTime(2025, 7, 7, 15, 28, 43, 98, DateTimeKind.Local).AddTicks(5640),
                            Description = "精製食鹽",
                            IsActive = true,
                            LastUpdatedDate = new DateTime(2025, 7, 7, 15, 28, 43, 98, DateTimeKind.Local).AddTicks(5640),
                            MinimumStock = 500m,
                            Name = "鹽",
                            StockQuantity = 5000m,
                            Supplier = "台鹽公司",
                            Unit = "公克"
                        });
                });

            modelBuilder.Entity("RecipeManagementApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("EstimatedProductionTimeMinutes")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("StandardPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)");

                    b.Property<decimal>("StandardYield")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("YieldUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("ProductCode")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = 0,
                            CreatedDate = new DateTime(2025, 7, 7, 15, 28, 43, 100, DateTimeKind.Local).AddTicks(4151),
                            Description = "經典白土司麵包，口感鬆軟香甜",
                            EstimatedProductionTimeMinutes = 180,
                            IsActive = true,
                            LastUpdatedDate = new DateTime(2025, 7, 7, 15, 28, 43, 100, DateTimeKind.Local).AddTicks(4748),
                            Name = "白土司麵包",
                            ProductCode = "BREAD-001",
                            StandardPrice = 45.0m,
                            StandardYield = 2m,
                            YieldUnit = "條"
                        },
                        new
                        {
                            Id = 2,
                            Category = 0,
                            CreatedDate = new DateTime(2025, 7, 7, 15, 28, 43, 100, DateTimeKind.Local).AddTicks(5226),
                            Description = "香濃奶油小餐包，適合早餐",
                            EstimatedProductionTimeMinutes = 150,
                            IsActive = true,
                            LastUpdatedDate = new DateTime(2025, 7, 7, 15, 28, 43, 100, DateTimeKind.Local).AddTicks(5227),
                            Name = "奶油小餐包",
                            ProductCode = "BREAD-002",
                            StandardPrice = 60.0m,
                            StandardYield = 12m,
                            YieldUnit = "個"
                        });
                });

            modelBuilder.Entity("RecipeManagementApi.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("BatchYield")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<decimal>("EstimatedCost")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)");

                    b.Property<string>("Instructions")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId", "Name", "Version")
                        .IsUnique();

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("RecipeManagementApi.Models.RecipeItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ConversionRatio")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("EstimatedCost")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)");

                    b.Property<bool>("IsOptional")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("RecipeId", "MaterialId")
                        .IsUnique();

                    b.ToTable("RecipeItems");
                });

            modelBuilder.Entity("RecipeManagementApi.Models.Recipe", b =>
                {
                    b.HasOne("RecipeManagementApi.Models.Product", "Product")
                        .WithMany("Recipes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RecipeManagementApi.Models.RecipeItem", b =>
                {
                    b.HasOne("RecipeManagementApi.Models.Material", "Material")
                        .WithMany("RecipeItems")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RecipeManagementApi.Models.Recipe", "Recipe")
                        .WithMany("Items")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeManagementApi.Models.Material", b =>
                {
                    b.Navigation("RecipeItems");
                });

            modelBuilder.Entity("RecipeManagementApi.Models.Product", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("RecipeManagementApi.Models.Recipe", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
